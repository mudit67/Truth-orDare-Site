{"version":3,"sources":["listNames.js","game.js","App.js","reportWebVitals.js","index.js"],"names":["listNames","props","Names","namesArr","map","name","index","icon","faWindowClose","Game","state","gameStart","run","console","log","this","NamesArr","length","disabled","type","onClick","max","window","respondent","randomNumber","asker","prevRespondent","prevAsker","randomIndex","setState","React","Component","GameEvaluate","nextProps","nextState","className","Math","floor","random","SameAlert","show","user","App","users","showAlert","appendName","bind","changeHandler","change","toUpperCase","concat","event","target","value","onSubmit","e","preventDefault","onChange","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdc11391.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faWindowClose}  from '@fortawesome/free-solid-svg-icons';\n// <i class=\"fas fa-window-close\"></i>\n\n\nfunction listNames(props){\n    var Names = props.namesArr.map((name, index) => {\n        return(\n            <div key = {index}>\n                {name} <FontAwesomeIcon icon={faWindowClose}/>\n            </div>\n        );\n    });\n    return(\n      <div>\n        {Names}\n      </div>\n    );\n}\nexport default listNames;\n","import React from 'react';\n\nclass Game extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            gameStart:false,\n            run:0\n        }\n    }\n    render(){\n        console.log(this.props.NamesArr);\n        // debugger;\n        if(this.props.NamesArr.length<3){\n            return(\n                <button disabled>Enter At least 3 Players.</button>\n            );\n        }\n        else{\n          // debugger;\n            return(\n                <div>\n                    <GameEvaluate NamesArr={this.props.NamesArr} run={this.state.run}/>\n                    <button type=\"button\" onClick={() => {randomIndex(this.props.NamesArr.length);this.setState({run: this.state.run+1});}}>Start</button>\n                </div>\n            );\n        }\n    }\n}\n\nclass GameEvaluate extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n    }\n  }\n  shouldComponentUpdate(nextProps, nextState){\n\n    if(nextProps.run===0){\n      console.log(false);\n      return(false);\n    }\n    else if(nextProps.run!==this.props.run){\n      console.log(nextProps.run);\n      return(true);\n    }\n    else{\n      return(false);\n    }\n  }\n  render(){\n    if(this.props.run>0){\n      // debugger;\n      return(\n        <div className=\"OP\">\n          {this.props.NamesArr[window.respondent] + \" \" + this.props.NamesArr[window.asker]}\n        </div>\n      );\n    }\n    else{\n      return(<div></div>)\n    }\n  }\n\n}\nfunction randomNumber(max){\n  return Math.floor(Math.random() * Math.floor(max));\n}\nfunction randomIndex(max) {\n    window.respondent=randomNumber(max);\n    window.asker=randomNumber(max);\n    while((window.respondent===window.asker) || (window.prevRespondent===window.respondent) || (window.prevAsker===window.asker)){\n        window.respondent=randomNumber(max);\n        window.asker=randomNumber(max);\n    }\n}\nexport default Game;\n","import React, { Component } from \"react\";\nimport './App.css';\nimport ListNames from './listNames';\nimport Game from './game';\n\nclass App extends React.PureComponent{\n  constructor(props){\n    super(props);\n    this.state = {\n      users: [],\n      user: \"\",\n      showAlert: false\n    }\n    this.appendName = this.appendName.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n  }\n  appendName(){\n    var change=true;\n    var Users = this.state.users;\n    Users.map((user) => {\n      // console.log(user + \"  \" + this.state.user)\n      if(user.toUpperCase()===this.state.user.toUpperCase()){\n        change=false;\n        this.setState({showAlert: true});\n      }\n      return (\" \");\n      // console.log(change);\n    });\n    if(change && (this.state.user!==\"\")){\n      // console.log(change);\n      // Users.push(this.state.user);\n      this.setState({users: this.state.users.concat(this.state.user)});\n      this.setState({user:\"\"});\n    }\n    console.log(this.state.users);\n  }\n  changeHandler(event){\n    this.setState({showAlert: false});\n    this.setState({user:event.target.value});\n    // console.log(event);\n  }\n  render(){\n    return(\n      <>\n        <h1>\n          Truth or Dare\n        </h1>\n        <form onSubmit={(e) => {this.appendName();e.preventDefault();}}>\n          <input value={this.state.user || \"\"} type=\"name\" onChange={this.changeHandler}/>\n        </form>\n        <SameAlert show={this.state.showAlert} user={this.state.user}/>\n        <ListNames namesArr={this.state.users}/>\n        <br/>\n        <br/>\n        <Game NamesArr={this.state.users}/>\n      </>\n    );\n\n  }\n}\n\nfunction SameAlert(props){\n  // var CostomAlert;\n  if(props.show){\n    return(\n      <>\n        {props.user} <b>is already Entered.</b>\n      </>\n    );\n  }\n  else{\n    return(\n      <div/>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}