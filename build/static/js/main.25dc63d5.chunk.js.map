{"version":3,"sources":["listNames.js","game.js","App.js","reportWebVitals.js","index.js"],"names":["listNames","props","Names","namesArr","map","name","index","className","icon","faTimes","onClick","removeUser","Game","state","gameStart","run","prevProps","prevState","NamesArr","length","this","setState","disabled","type","max","window","respondent","randomNumber","asker","prevRespondent","prevAsker","randomIndex","faPlay","React","Component","GameEvaluate","nextProps","nextState","Math","floor","random","App","users","user","showAlert","appendName","bind","changeHandler","fetch","method","headers","body","encode","change","toUpperCase","concat","event","target","value","del_index","filter","onSubmit","e","preventDefault","data-netlify","data-netlify-honeypot","netlify","onChange","placeholder","faPlus","SameAlert","show","userIn","data","Object","keys","key","encodeURIComponent","join","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25dc63d5.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faTimes}  from '@fortawesome/free-solid-svg-icons';\n// <i class=\"fas fa-window-close\"></i>\n\n\nfunction listNames(props){\n    var Names = props.namesArr.map((name, index) => {\n        // console.log(index);\n        return(\n            <div className=\"users-name\" key = {index}>\n                {name} <FontAwesomeIcon icon={faTimes} className=\"close-icon\" onClick={() => {props.removeUser(index);}}/>\n            </div>\n        );\n    });\n    return(\n      <div className=\"names-container\">\n        {Names}\n      </div>\n    );\n}\nexport default listNames;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faPlay}  from '@fortawesome/free-solid-svg-icons';\nclass Game extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            gameStart:false,\n            run:0\n        }\n    }\n    getSnapshotBeforeUpdate(prevProps,prevState){\n      // debugger;\n      if(prevProps.NamesArr.length!==this.props.NamesArr.length){\n        // debugger;\n        if(this.state.run!==0){\n          this.setState({run:0});\n        }\n      }\n      return null;\n    }\n    render(){\n        // console.log(this.props.NamesArr);\n        // debugger;\n        if(this.props.NamesArr.length<3){\n            return(\n                <button className=\"play-button\" disabled>Enter At least 3 Players.</button>\n            );\n        }\n        else{\n          // debugger;\n            return(\n                <div>\n                    <GameEvaluate NamesArr={this.props.NamesArr} run={this.state.run}/>\n                    <button\n                      className=\"play-button\"\n                      type=\"button\"\n                      onClick={() => {randomIndex(this.props.NamesArr.length);this.setState({run: this.state.run+1});}}\n                      >\n                      Start\n                      <FontAwesomeIcon icon={faPlay} className=\"play-icon\"/>\n                    </button>\n                </div>\n            );\n        }\n    }\n}\n\nclass GameEvaluate extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n    }\n  }\n  shouldComponentUpdate(nextProps, nextState){\n    debugger;\n    if(nextProps.run===0){\n      // console.log(false);\n      return(true);\n    }\n    else if(nextProps.run!==this.props.run){\n      // console.log(nextProps.run);\n      return(true);\n    }\n    else{\n      return(false);\n    }\n  }\n  render(){\n    // debugger;\n    if(this.props.run>0){\n      return(\n        <div className=\"OP\">\n          <span className=\"name\">{this.props.NamesArr[window.asker]}</span> asks/gives dare to <span className=\"name\">{this.props.NamesArr[window.respondent]}</span>.\n        </div>\n      );\n    }\n    else{\n      return(<div></div>)\n    }\n  }\n\n}\nfunction randomNumber(max){\n  return Math.floor(Math.random() * Math.floor(max));\n}\nfunction randomIndex(max) {\n    // debugger;\n    window.respondent=randomNumber(max);\n    window.asker=randomNumber(max);\n    while((window.respondent===window.asker) || (window.prevRespondent===window.respondent) || (window.prevAsker===window.asker)){\n        window.respondent=randomNumber(max);\n        window.asker=randomNumber(max);\n    }\n    window.prevAsker=window.asker;\n    window.prevRespondent=window.respondent;\n}\nexport default Game;\n","import React from \"react\";\nimport './App.css';\nimport ListNames from './listNames';\nimport Game from './game';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faPlus}  from '@fortawesome/free-solid-svg-icons';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      users: [],\n      user: \"\",\n      showAlert: false\n    }\n    this.appendName = this.appendName.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.removeUser = this.removeUser.bind(this);\n  }\n  appendName(){\n    fetch(\"/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: encode({ \"form-name\": \"users\", ...this.state.user })\n    })\n    var change=true;\n    var Users = this.state.users;\n    Users.map((user) => {\n      if(user.toUpperCase()===this.state.user.toUpperCase()){\n        change=false;\n        this.setState({showAlert: true});\n      }\n      return (\" \");\n    });\n    if(change && (this.state.user!==\"\")){\n      this.setState({users: this.state.users.concat(this.state.user),user:\"\"});\n    }\n    // console.log(this.state.users);\n  }\n  changeHandler(event){\n    this.setState({showAlert: false});\n    this.setState({user:event.target.value});\n  }\n  removeUser(del_index){\n    this.setState({users: this.state.users.filter((user, index) => index!==del_index)});\n  }\n  render(){\n    return(\n      <>\n        <nav>\n          <h1>\n            Truth or Dare\n          </h1>\n        </nav>\n        <form method=\"post\" name=\"users\" onSubmit={(e) => {this.appendName();e.preventDefault();}} data-netlify=\"true\" data-netlify-honeypot=\"bot-field\" netlify>\n          <div className=\"input-container\">\n            <input name=\"user\" value={this.state.user || \"\"} type=\"name\" onChange={this.changeHandler} placeholder=\"Enter a player name.\"/>\n            <input type=\"hidden\" name=\"form-name\" value=\"users\"/>\n            <div className=\"input-bar\"/>\n          </div>\n          <FontAwesomeIcon icon={faPlus} className=\"add-icon\" onClick={(e) => {this.appendName();e.preventDefault();}}/>\n        </form>\n        <SameAlert className=\"samealert\" show={this.state.showAlert} user={this.state.users[0]}/>\n        <ListNames namesArr={this.state.users} removeUser={(userIn) => {this.removeUser(userIn);}}/>\n        <br/>\n        <br/>\n        <Game NamesArr={this.state.users}/>\n      </>\n    );\n\n  }\n}\n\nfunction SameAlert(props){\n  // var CostomAlert;\n  if(props.show){\n    return(\n      <div className=\"samealert\">\n        {props.user} <b>is already Entered.</b>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div/>\n    );\n  }\n}\n\nconst encode = (data) => {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\");\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}